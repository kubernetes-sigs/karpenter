---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: nodeoverlays.karpenter.sh
spec:
  group: karpenter.sh
  names:
    categories:
    - karpenter
    kind: NodeOverlay
    listKind: NodeOverlayList
    plural: nodeoverlays
    singular: nodeoverlay
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Capacity adds extended resource to instances types based
                  on the selector provided
                type: object
              priceAdjustment:
                description: |-
                  UPDATE WORDING: PricePercent modifies the price of the simulated node (PriceAdjustment + (Price * PricePercent / 100)).
                  Update Validation
                type: string
              requirements:
                description: Requirements are layered with GetLabels and applied to
                  every node.
                items:
                  description: |-
                    A node selector requirement is a selector that contains values, a key, and an operator
                    that relates the key and values.
                  properties:
                    key:
                      description: The label key that the selector applies to.
                      type: string
                    operator:
                      description: |-
                        Represents a key's relationship to a set of values.
                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                      type: string
                    values:
                      description: |-
                        An array of string values. If the operator is In or NotIn,
                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                        the values array must be empty. If the operator is Gt or Lt, the values
                        array must have a single element, which will be interpreted as an integer.
                        This array is replaced during a strategic merge patch.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - key
                  - operator
                  type: object
                maxItems: 100
                type: array
                x-kubernetes-validations:
                - message: requirements with operator 'In' must have a value defined
                  rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 :
                    true)'
                - message: requirements operator 'Gt' or 'Lt' must have a single positive
                    integer value
                  rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'')
                    ? (x.values.size() == 1 && int(x.values[0]) >= 0) : true)'
                - message: requirements with 'minValues' must have at least that many
                    values specified in the 'values' field
                  rule: 'self.all(x, (x.operator == ''In'' && has(x.minValues)) ?
                    x.values.size() >= x.minValues : true)'
              weight:
                description: |-
                  Weight is the priority given to the nodeoverlay while overriding node attributes. A higher
                  numerical weight indicates that this nodeoverlay will be ordered
                  ahead of other nodeoverlay with lower weights. A nodeoverlay with no weight
                  will be treated as if it is a nodeoverlay with a weight of 0. Two nodeoverlays that have the same weight,
                  we will merge them in alphabetical order.
                format: int64
                maximum: 100
                minimum: 1
                type: integer
            required:
            - requirements
            type: object
            x-kubernetes-validations:
            - message: 'need to define a capacity or priceAdjustment field '
              rule: has(self.capacity) || has(self.priceAdjustment)
        required:
        - spec
        type: object
    served: true
    storage: true
