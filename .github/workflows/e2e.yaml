name: e2e
on:
  workflow_call:
    inputs:
      k8s_version:
        type: string
        default: "1.34"
      suite:
        type: string
        required: true
jobs:
  e2e:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    name: suite-${{ inputs.suite }}
    steps:
    - name: Debug workflow_run trigger
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Workflow run name: ${{ github.event.workflow_run.name }}"
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up Python 3.10
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: "3.10"
    - uses: ./.github/actions/install-deps
      with:
          k8sVersion: ${{ inputs.k8s_version }}
    - name: Kind Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
    - name: check kind cluster and taint nodes
      shell: bash
      run: |
        kubectl config current-context
        kubectl get nodes
        kubectl taint nodes chart-testing-control-plane CriticalAddonsOnly:NoSchedule
    - name: install prometheus 
      uses: ./.github/actions/install-prometheus
    - name: install pyroscope 
      uses: ./.github/actions/install-pyroscope
    - name: install kwok and controller
      shell: bash
      run: |
        make install-kwok
        export KWOK_REPO=kind.local
        export KIND_CLUSTER_NAME=chart-testing
        make apply-with-kind
    - name: ping cluster
      shell: bash
      run: | 
        sleep 15
        kubectl get pods -n kube-system | grep karpenter 
        kubectl get nodepools
        kubectl get pods -A
        kubectl describe nodes
    - name: run the ${{ inputs.suite }} test suite
      env:
          SUITE: ${{ inputs.suite }}
      shell: bash
      run: |
        OUTPUT_DIR=$(mktemp -d)
        export OUTPUT_DIR
        echo OUTPUT_DIR="$OUTPUT_DIR" >> "$GITHUB_ENV"
        TEST_SUITE="$SUITE" make e2etests
    - name: cleanup 
      shell: bash
      run: | 
        kubectl delete nodepools --all 
        make delete
        make uninstall-kwok
        